{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe_SendFailed",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8e885e1f209c37ab880d94be9b9749aa9ba1ebda8e069a03a29c6450e68acc62",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "979662",
    "logsBloom": "0x
    "blockHash": "0xc8e42361a04e4d595fad944ff6ba842b0c7fe6ee3d07f5809c6c2b0030befc15",
    "transactionHash": "0x8e885e1f209c37ab880d94be9b9749aa9ba1ebda8e069a03a29c6450e68acc62",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "979662",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "1a78a6e6ac3757c92503ec266fa1c280",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe_SendFailed\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Jason Wang\",\"details\":\"This implementation price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n// import \\\"hardhat/console.sol\\\";\\n\\nerror FundMe_NotOwner();\\nerror FundMe_SendFailed();\\n\\n/** @title A contract for crowd funding\\n *  @author Jason Wang\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev This implementation price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] public s_funders;\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe_NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // receive and fallback\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array\\n        s_funders = new address[](0);\\n\\n        /*\\n        // actually withdraw the funds\\n        // 1. transfer\\n        payable(msg.sender).transfer(address(this).balance);\\n\\n        // 2. send\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        require(sendSuccess, \\\"Send failed\\\");\\n        */\\n\\n        // 3. call\\n        (bool sendSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (sendSuccess != true) {\\n            revert FundMe_SendFailed();\\n        }\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n}\\n\",\"keccak256\":\"0x92adb7f81f117b40d95676a7fa2addc018490db8b4f5372cbc0c7df0224fb90b\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // around 1732,00000000 USD\\n        return uint256(price * 1e10); // In order to match the msg.value units\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x0fee9a8b6bb99f154850a3f7dc9f451b60e841aadde9508702f363975421aaf8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011e0380380620011e0833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61105a6200018660003960008181610334015281816105be015281816107b4015261084c015261105a6000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101a05761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad6102f4565b6040516100ba9190610a70565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610ace565b61031a565b6040516100f79190610b14565b60405180910390f35b34801561010c57600080fd5b50610115610332565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b5b565b610570565b60405161014b9190610b97565b60405180910390f35b34801561016057600080fd5b506101696105af565b6040516101769190610b14565b60405180910390f35b6101876101cb565b005b34801561019557600080fd5b5061019e6105bc565b005b3480156101ac57600080fd5b506101b561084a565b6040516101c29190610b97565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461086e90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c0f565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b7576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104625760008082815481106103dc576103db610c2f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045a90610c8d565b9150506103ba565b50600067ffffffffffffffff81111561047e5761047d610cd6565b5b6040519080825280602002602001820160405280156104ac5781602001602082028036833780820191505090505b50600090805190602001906104c292919061094a565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e990610d36565b60006040518083038185875af1925050503d8060008114610526576040519150601f19603f3d011682016040523d82523d6000602084013e61052b565b606091505b50509050600115158115151461056d576040517f191e52d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000818154811061058057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610641576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106c457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161067a575b5050505050905060005b815181101561074f5760008282815181106106ec576106eb610c2f565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074790610c8d565b9150506106ce565b50600067ffffffffffffffff81111561076b5761076a610cd6565b5b6040519080825280602002602001820160405280156107995781602001602082028036833780820191505090505b50600090805190602001906107af92919061094a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107f690610d36565b60006040518083038185875af1925050503d8060008114610833576040519150601f19603f3d011682016040523d82523d6000602084013e610838565b606091505b505090508061084657600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061087a836108aa565b90506000670de0b6b3a764000085836108939190610d4b565b61089d9190610dd4565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108f357600080fd5b505afa158015610907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092b9190610e92565b5050509150506402540be400816109429190610f0d565b915050919050565b8280548282559060005260206000209081019282156109c3579160200282015b828111156109c25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061096a565b5b5090506109d091906109d4565b5090565b5b808211156109ed5760008160009055506001016109d5565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a36610a31610a2c846109f1565b610a11565b6109f1565b9050919050565b6000610a4882610a1b565b9050919050565b6000610a5a82610a3d565b9050919050565b610a6a81610a4f565b82525050565b6000602082019050610a856000830184610a61565b92915050565b600080fd5b6000610a9b826109f1565b9050919050565b610aab81610a90565b8114610ab657600080fd5b50565b600081359050610ac881610aa2565b92915050565b600060208284031215610ae457610ae3610a8b565b5b6000610af284828501610ab9565b91505092915050565b6000819050919050565b610b0e81610afb565b82525050565b6000602082019050610b296000830184610b05565b92915050565b610b3881610afb565b8114610b4357600080fd5b50565b600081359050610b5581610b2f565b92915050565b600060208284031215610b7157610b70610a8b565b5b6000610b7f84828501610b46565b91505092915050565b610b9181610a90565b82525050565b6000602082019050610bac6000830184610b88565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610bf9601383610bb2565b9150610c0482610bc3565b602082019050919050565b60006020820190508181036000830152610c2881610bec565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9882610afb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ccb57610cca610c5e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d20600083610d05565b9150610d2b82610d10565b600082019050919050565b6000610d4182610d13565b9150819050919050565b6000610d5682610afb565b9150610d6183610afb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d9a57610d99610c5e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ddf82610afb565b9150610dea83610afb565b925082610dfa57610df9610da5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e2481610e05565b8114610e2f57600080fd5b50565b600081519050610e4181610e1b565b92915050565b6000819050919050565b610e5a81610e47565b8114610e6557600080fd5b50565b600081519050610e7781610e51565b92915050565b600081519050610e8c81610b2f565b92915050565b600080600080600060a08688031215610eae57610ead610a8b565b5b6000610ebc88828901610e32565b9550506020610ecd88828901610e68565b9450506040610ede88828901610e7d565b9350506060610eef88828901610e7d565b9250506080610f0088828901610e32565b9150509295509295909350565b6000610f1882610e47565b9150610f2383610e47565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6257610f61610c5e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f9f57610f9e610c5e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fdc57610fdb610c5e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561101957611018610c5e565b5b82820290509291505056fea2646970667358221220e8a9efe256648236d40a8654e3ce8b47b3fef0f8e90d0e8035079484027309ef64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101a05761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad6102f4565b6040516100ba9190610a70565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610ace565b61031a565b6040516100f79190610b14565b60405180910390f35b34801561010c57600080fd5b50610115610332565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b5b565b610570565b60405161014b9190610b97565b60405180910390f35b34801561016057600080fd5b506101696105af565b6040516101769190610b14565b60405180910390f35b6101876101cb565b005b34801561019557600080fd5b5061019e6105bc565b005b3480156101ac57600080fd5b506101b561084a565b6040516101c29190610b97565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461086e90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c0f565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b7576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104625760008082815481106103dc576103db610c2f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045a90610c8d565b9150506103ba565b50600067ffffffffffffffff81111561047e5761047d610cd6565b5b6040519080825280602002602001820160405280156104ac5781602001602082028036833780820191505090505b50600090805190602001906104c292919061094a565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e990610d36565b60006040518083038185875af1925050503d8060008114610526576040519150601f19603f3d011682016040523d82523d6000602084013e61052b565b606091505b50509050600115158115151461056d576040517f191e52d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000818154811061058057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610641576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106c457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161067a575b5050505050905060005b815181101561074f5760008282815181106106ec576106eb610c2f565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074790610c8d565b9150506106ce565b50600067ffffffffffffffff81111561076b5761076a610cd6565b5b6040519080825280602002602001820160405280156107995781602001602082028036833780820191505090505b50600090805190602001906107af92919061094a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107f690610d36565b60006040518083038185875af1925050503d8060008114610833576040519150601f19603f3d011682016040523d82523d6000602084013e610838565b606091505b505090508061084657600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061087a836108aa565b90506000670de0b6b3a764000085836108939190610d4b565b61089d9190610dd4565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108f357600080fd5b505afa158015610907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092b9190610e92565b5050509150506402540be400816109429190610f0d565b915050919050565b8280548282559060005260206000209081019282156109c3579160200282015b828111156109c25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061096a565b5b5090506109d091906109d4565b5090565b5b808211156109ed5760008160009055506001016109d5565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a36610a31610a2c846109f1565b610a11565b6109f1565b9050919050565b6000610a4882610a1b565b9050919050565b6000610a5a82610a3d565b9050919050565b610a6a81610a4f565b82525050565b6000602082019050610a856000830184610a61565b92915050565b600080fd5b6000610a9b826109f1565b9050919050565b610aab81610a90565b8114610ab657600080fd5b50565b600081359050610ac881610aa2565b92915050565b600060208284031215610ae457610ae3610a8b565b5b6000610af284828501610ab9565b91505092915050565b6000819050919050565b610b0e81610afb565b82525050565b6000602082019050610b296000830184610b05565b92915050565b610b3881610afb565b8114610b4357600080fd5b50565b600081359050610b5581610b2f565b92915050565b600060208284031215610b7157610b70610a8b565b5b6000610b7f84828501610b46565b91505092915050565b610b9181610a90565b82525050565b6000602082019050610bac6000830184610b88565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610bf9601383610bb2565b9150610c0482610bc3565b602082019050919050565b60006020820190508181036000830152610c2881610bec565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9882610afb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ccb57610cca610c5e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d20600083610d05565b9150610d2b82610d10565b600082019050919050565b6000610d4182610d13565b9150819050919050565b6000610d5682610afb565b9150610d6183610afb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d9a57610d99610c5e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ddf82610afb565b9150610dea83610afb565b925082610dfa57610df9610da5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e2481610e05565b8114610e2f57600080fd5b50565b600081519050610e4181610e1b565b92915050565b6000819050919050565b610e5a81610e47565b8114610e6557600080fd5b50565b600081519050610e7781610e51565b92915050565b600081519050610e8c81610b2f565b92915050565b600080600080600060a08688031215610eae57610ead610a8b565b5b6000610ebc88828901610e32565b9550506020610ecd88828901610e68565b9450506040610ede88828901610e7d565b9350506060610eef88828901610e7d565b9250506080610f0088828901610e32565b9150509295509295909350565b6000610f1882610e47565b9150610f2383610e47565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6257610f61610c5e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f9f57610f9e610c5e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fdc57610fdb610c5e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561101957611018610c5e565b5b82820290509291505056fea2646970667358221220e8a9efe256648236d40a8654e3ce8b47b3fef0f8e90d0e8035079484027309ef64736f6c63430008080033",
  "devdoc": {
    "author": "Jason Wang",
    "details": "This implementation price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}